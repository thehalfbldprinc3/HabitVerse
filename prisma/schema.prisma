generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  externalId String   @unique
  email      String
  name       String?
  imageUrl   String?
  createdAt  DateTime @default(now())

  groupMembers GroupMember[]
  habitLogs    HabitLog[]
}

model Group {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())

  habits  GroupHabit[]
  members GroupMember[]
}

model GroupMember {
  id       String  @id @default(cuid())
  userId   String
  groupId  String
  role     Role    @default(MEMBER)

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])

  @@unique([userId, groupId])
}

model GroupHabit {
  id           String    @id @default(cuid())
  groupId      String
  title        String
  description  String?
  frequency    String
  startDate    DateTime
  reminderTime DateTime?
  icon         String?
  color        String?
  isArchived   Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  group   Group   @relation(fields: [groupId], references: [id])
  logs    HabitLog[]
}

model HabitLog {
  id         String   @id @default(cuid())
  userId     String
  groupHabitId String
  date       DateTime
  status     Boolean

  user       User       @relation(fields: [userId], references: [id])
  groupHabit GroupHabit @relation(fields: [groupHabitId], references: [id])

  @@unique([userId, groupHabitId, date])
}

enum Role {
  OWNER
  MEMBER
}