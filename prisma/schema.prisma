generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Habit {
  id           String    @id @default(cuid())
  userId       String
  tenantId     String
  title        String
  description  String?
  frequency    String
  startDate    DateTime
  reminderTime DateTime?
  icon         String?
  color        String?
  isArchived   Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  user   User       @relation(fields: [userId], references: [id])
  tenant Tenant     @relation(fields: [tenantId], references: [id])
  logs   HabitLog[]
}

model HabitLog {
  id      String   @id @default(cuid())
  habitId String
  userId  String
  date    DateTime
  status  Boolean

  habit Habit @relation(fields: [habitId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}

model Tenant {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())

  users        User[]
  habits       Habit[]
  integrations Integration[]
  activityLogs ActivityLog[]
}

model User {
  id         String   @id @default(cuid()) // internal ID
  externalId String   @unique // Clerk user ID
  email      String
  name       String?
  imageUrl   String?
  role       Role     @default(USER)
  tenantId   String
  createdAt  DateTime @default(now())

  tenant       Tenant        @relation(fields: [tenantId], references: [id])
  habits       Habit[]
  habitLogs    HabitLog[]
  integrations Integration[]
  activityLogs ActivityLog[]
}

model Integration {
  id        String            @id @default(cuid())
  type      IntegrationType
  status    IntegrationStatus @default(PENDING)
  userId    String
  tenantId  String
  createdAt DateTime          @default(now())

  user   User   @relation(fields: [userId], references: [id])
  tenant Tenant @relation(fields: [tenantId], references: [id])
}

model ActivityLog {
  id        String          @id @default(cuid())
  tenantId  String
  userId    String
  source    IntegrationType
  content   String
  timestamp DateTime

  user   User   @relation(fields: [userId], references: [id])
  tenant Tenant @relation(fields: [tenantId], references: [id])
}

enum Role {
  OWNER
  ADMIN
  USER
}

enum IntegrationType {
  GITHUB
  GOOGLE_CALENDAR
  SLACK
  NOTION
  LINEAR
}

enum IntegrationStatus {
  ACTIVE
  INACTIVE
  PENDING
  ERROR
}
